<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- Allows the app to access only the photos/videos the user explicitly selects. -->
    <uses-permission android:name="android.permission.READ_MEDIA_VISUAL_USER_SELECTED" />
    <!-- Required for streaming online content and YouTube API/extraction -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!--
        The following broad media access permissions have been removed:
        <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />
        <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="32" />
        Your app should now primarily use the Android Photo Picker (triggered by VideoPlayerEvent.RequestPickVideo)
        to let users choose local video files.
    -->

    <application
        android:name="dev.diegoflassa.poc.exoplayer.MyApplication"
        android:usesCleartextTraffic="true"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Exoplayer">
        <activity
            android:name="dev.diegoflassa.poc.exoplayer.MainActivity"
            android:exported="true"
            android:theme="@style/Theme.Exoplayer">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>